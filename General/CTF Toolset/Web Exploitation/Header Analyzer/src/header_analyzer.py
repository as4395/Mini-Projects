import requests
import sys

# A dictionary of security-related HTTP headers and their purposes
SECURITY_HEADERS = {
    "Content-Security-Policy": "Protects against XSS by restricting resource loading.",
    "Strict-Transport-Security": "Enforces HTTPS connections to the server.",
    "X-Content-Type-Options": "Prevents MIME type sniffing.",
    "X-Frame-Options": "Protects against clickjacking.",
    "X-XSS-Protection": "Enables basic XSS protection in some browsers.",
    "Referrer-Policy": "Controls how much referrer info is shared.",
    "Permissions-Policy": "Restricts browser features like camera, geolocation, etc.",
    "Access-Control-Allow-Origin": "Cross-origin access control policy."
}

def analyze_headers(headers: dict):
    print("\n[+] Response Headers:")
    for key, value in headers.items():
        print(f"  {key}: {value}")

    print("\n[+] Security Header Analysis:")
    for sec_header, description in SECURITY_HEADERS.items():
        if sec_header in headers:
            print(f"  ✅ {sec_header} is present.")
        else:
            print(f"  ⚠️ Missing: {sec_header} — {description}")

def main():
    if len(sys.argv) != 2:
        print(f"Usage: python3 {sys.argv[0]} <target_url>")
        sys.exit(1)

    target_url = sys.argv[1]
    try:
        # Perform GET request to extract headers
        response = requests.get(target_url, timeout=5)
        print(f"\n[+] Target: {target_url}")
        print(f"[+] Status Code: {response.status_code}")
        analyze_headers(response.headers)
    except requests.RequestException as e:
        print(f"[-] Error: Could not reach {target_url}. Reason: {e}")

if __name__ == "__main__":
    main()
