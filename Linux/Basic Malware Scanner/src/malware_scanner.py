#!/usr/bin/env python3

import os
import argparse
import hashlib

SIGNATURE_FILE = "signatures/malware_hashes.txt"

def load_signatures():
    if not os.path.exists(SIGNATURE_FILE):
        print(f"[x] Signature file not found: {SIGNATURE_FILE}")
        return set()
    with open(SIGNATURE_FILE, "r") as f:
        return set(line.strip().lower() for line in f if line.strip())

def compute_sha256(filepath):
    sha256 = hashlib.sha256()
    try:
        with open(filepath, "rb") as f:
            while chunk := f.read(4096):
                sha256.update(chunk)
        return sha256.hexdigest()
    except Exception as e:
        print(f"[!] Failed to hash {filepath}: {e}")
        return None

def scan_directory(path, signatures):
    print(f"[+] Scanning: {path}")
    for root, dirs, files in os.walk(path):
        for file in files:
            full_path = os.path.join(root, file)
            hash_val = compute_sha256(full_path)
            if hash_val and hash_val in signatures:
                print(f"[!] Malware detected: {full_path}")

if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument("--path", required=True, help="Directory to scan")
    args = parser.parse_args()

    signatures = load_signatures()
    if not signatures:
        print("[x] No signatures loaded.")
    else:
        scan_directory(args.path, signatures)
